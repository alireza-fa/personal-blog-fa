# Generated by Django 4.1.5 on 2023-01-28 02:26

import ckeditor.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=34, verbose_name='name')),
                ('name_en', models.CharField(max_length=34, verbose_name='name english')),
                ('slug', models.SlugField(verbose_name='slug')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=120, verbose_name='email')),
                ('is_active', models.BooleanField(default=False, verbose_name='is active')),
            ],
            options={
                'verbose_name': 'Newsletter',
                'verbose_name_plural': 'Newsletters',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='title')),
                ('title_en', models.CharField(max_length=120, verbose_name='title english')),
                ('slug', models.SlugField(max_length=150, verbose_name='slug')),
                ('introduction', models.CharField(max_length=76, verbose_name='introduction')),
                ('body', ckeditor.fields.RichTextField(verbose_name='body')),
                ('published_at', models.DateTimeField(default=datetime.datetime(2023, 1, 28, 2, 26, 36, 690900, tzinfo=datetime.timezone.utc), verbose_name='published at')),
                ('image_cover', models.ImageField(help_text='recommended: Image(550X367)', upload_to='', verbose_name='image_cover')),
                ('image', models.ImageField(help_text='recommended: Image(750X540)', upload_to='', verbose_name='image')),
                ('image_avatar', models.ImageField(help_text='recommended: Image(60X60)', upload_to='', verbose_name='image avatar')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL, verbose_name='author')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
                'ordering': ('-created',),
            },
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PostTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=34, verbose_name='name')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='blog.post', verbose_name='post')),
            ],
            options={
                'verbose_name': 'Post Tag',
                'verbose_name_plural': 'Post Tags',
            },
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(blank=True, max_length=34, verbose_name='fullname')),
                ('email', models.EmailField(blank=True, max_length=120, verbose_name='email')),
                ('website', models.CharField(blank=True, max_length=120, null=True, verbose_name='website')),
                ('body', models.CharField(max_length=120, verbose_name='body')),
                ('image', models.ImageField(default='comment_avatar.png', upload_to='', verbose_name='image')),
                ('is_child', models.BooleanField(default=False, verbose_name='is child')),
                ('is_active', models.BooleanField(default=False, verbose_name='is active')),
                ('is_read', models.BooleanField(default=False, verbose_name='is read')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='blog.postcomment', verbose_name='parent')),
                ('post', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.post', verbose_name='post')),
            ],
            options={
                'verbose_name': 'Post Comment',
                'verbose_name_plural': 'Post Comments',
            },
            managers=[
                ('default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PostCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='posts', to='blog.category', verbose_name='category')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='blog.post', verbose_name='post')),
            ],
            options={
                'verbose_name': 'Post Category',
                'verbose_name_plural': 'Post Categories',
            },
        ),
    ]
